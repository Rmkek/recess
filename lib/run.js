// Generated by CoffeeScript 2.0.2
module.exports = function(punk) {
  var getToRun, reporter, tasks;
  reporter = punk.reporter;
  punk._tasks = tasks = {};
  getToRun = function(ts) {
    var i, len, name, ret;
    ret = {};
    for (i = 0, len = ts.length; i < len; i++) {
      name = ts[i];
      if (tasks[name]) {
        ret[name] = tasks[name];
      } else {
        reporter.taskNotDefined(name);
      }
    }
    return ret;
  };
  punk.task = punk.tasks = function(task) {
    return Object.assign(tasks, task);
  };
  punk.run = async function(ts) {
    var e, toRun;
    reporter.start();
    reporter.usingConfig(punk.filename);
    punk.d.keepAlive();
    if (!Array.isArray(ts)) {
      ts = [ts];
    }
    toRun = getToRun(ts);
    try {
      await punk.d.mapAsync(toRun, async function(setting, name) {
        return (await punk._runTask(name, setting));
      });
      return reporter.end();
    } catch (error) {
      e = error;
      return reporter.error(e);
    }
  };
  return punk.watch = async function(settings) {
    var e;
    reporter.startWatch();
    reporter.usingConfig(punk.filename);
    punk.d.keepAlive();
    try {
      return (await punk.d.mapAsync(settings, async function(setting, name) {
        return (await punk._watchTask(name, setting));
      }));
    } catch (error) {
      e = error;
      return reporter.error(e);
    }
  };
};
