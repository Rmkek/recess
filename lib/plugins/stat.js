// Generated by CoffeeScript 2.1.1
var Mode, assign, normalize;

assign = require('deep-assign');

Mode = require('stat-mode');

normalize = function(mode) {
  var called, i, key, len, newMode, ref;
  called = false;
  newMode = {
    owner: {},
    group: {},
    others: {}
  };
  ref = ['read', 'write', 'execute'];
  for (i = 0, len = ref.length; i < len; i++) {
    key = ref[i];
    if (!(typeof mode[key] === 'boolean')) {
      continue;
    }
    newMode.owner[key] = mode[key];
    newMode.group[key] = mode[key];
    newMode.others[key] = mode[key];
    called = true;
  }
  if (called) {
    return newMode;
  } else {
    return mode;
  }
};

module.exports = function(punk) {
  var plugin, reporter;
  reporter = punk.reporter;
  plugin = {};
  plugin.pipes = {
    stat: function(stat) {
      if (typeof stat === 'object') {
        stat = normalize(stat);
      }
      return punk.i.any(function(files, cond) {
        var file, i, len;
        for (i = 0, len = files.length; i < len; i++) {
          file = files[i];
          if (typeof stat === 'number') {
            file.stat = stat;
          } else {
            assign(file.stat, stat);
          }
        }
        return files;
      });
    }
  };
  plugin.pipes.mode = plugin.pipes.stat;
  return plugin;
};
