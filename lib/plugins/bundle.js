// Generated by CoffeeScript 2.0.2
// REQUIRED MODULES #
var babelify, browserify, path, stream, streamify;

stream = require('stream');

path = require('path');

browserify = require('browserify');

babelify = require('babelify');

// create stream from buffer
streamify = function(b) {
  var s;
  s = new stream.Readable;
  s.push(b);
  s.push(null);
  return s;
};

module.exports = function(punk, reporter) {
  var plugin;
  plugin = {};
  plugin.pipes = {
    bundle: function(settings) {
      // PIPE #
      return function(files) {
        return new Promise(async function(resolve, reject) {
          var bnd, bundles, finished;
          bundles = 0;
          finished = 0;
          bnd = function(name, contents) {
            var bundle;
            // new browserify bundle
            bundle = browserify(streamify(contents), {
              basedir: path.dirname(name) // set cwd to file name
            });
            
            // add babelify
            bundle.transform(babelify, {
              presets: ["env", "vue-app"]
            });
            bundles++;
            // start bundling
            return bundle.bundle(function(err, b) {
              // throw error
              if (err) {
                console.error(err);
                process.exit();
              }
              // write file
              files[name] = b.toString();
              finished++;
              // when all bundles are finished
              if (finished === bundles) {
                // next pipe
                return resolve(files);
              }
            });
          };
          return (await punk.d.mapAsync(files, async function(contents, name) {
            return (await bnd(name, contents));
          }));
        });
      };
    }
  };
  return plugin;
};
