// Generated by CoffeeScript 2.0.2
var bufferize, chalk, getExt, isBuffer, isSvg, path, type;

type = require('file-type');

path = require('path');

chalk = require('chalk');

isSvg = require('is-svg');

isBuffer = require('is-buffer');

bufferize = function(files) {
  var file, name, results;
  results = [];
  for (name in files) {
    file = files[name];
    if (!isBuffer(file)) {
      results.push(files[name] = Buffer.from(file));
    } else {
      results.push(void 0);
    }
  }
  return results;
};

getExt = function(name = '') {
  var ext;
  ext = path.extname(name).split('.');
  return ext[ext.length - 1];
};

module.exports = function(punk, reporter) {
  var plugin;
  plugin = {};
  plugin.pipes = {
    convert: function(settings) {
      return async function(files, cond) {
        var r;
        r = (await punk.d.mapAsync(files, async function(file) {
          var ext, nc, newName, pipe, regexp;
          ext = punk.d.getType(file);
          // if there's needed converter
          if (punk.converters[ext] && punk.converters[ext][settings]) {
            // get new name
            regexp = new RegExp(ext + '$', 'i');
            newName = file.path.replace(regexp, settings);
            pipe = punk.converters[ext][settings];
            r = (await pipe([file], cond));
            nc = Buffer.from(r[0].contents);
            // pipe file
            return new punk.File(file.path, nc);
          } else {
            // remove file
            reporter.noConverter(file.path, ext);
          }
        }));
        return r;
      };
    }
  };
  plugin.pipes.to = plugin.pipes.ex = plugin.pipes.convert;
  return plugin;
};
